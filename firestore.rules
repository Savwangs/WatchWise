rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Pairing requests - anyone can create, and any authenticated user can read during pairing
    match /pairingRequests/{requestId} {
      allow create, read, update: if isAuthenticated();
      allow delete: if isAuthenticated() && 
        (resource.data.childUserId == request.auth.uid || 
        resource.data.parentUserId == request.auth.uid);
    }
    
    // Users collection - allow authenticated users to access (needed for pairing)
    match /users/{userId} {
      allow read, write: if isAuthenticated();
    }
    
    // Parent-child relationships - only involved parties can access
    match /parentChildRelationships/{relationshipId} {
      allow create: if isAuthenticated();
      allow read, write: if isAuthenticated() && 
        (resource.data.parentUserId == request.auth.uid || 
         resource.data.childUserId == request.auth.uid);
      allow delete: if isAuthenticated() && 
        (resource.data.parentUserId == request.auth.uid || 
         resource.data.childUserId == request.auth.uid);
    }
    
    // Families collection - allow authenticated users to access
    match /families/{familyId} {
      allow read, write: if isAuthenticated();
    }
    
    // Child devices - allow authenticated users to access
    match /childDevices/{deviceId} {
      allow read, write: if isAuthenticated();
    }
    
    // Screen time data - allow authenticated users to access
    match /screenTimeData/{docId} {
      allow read, write: if isAuthenticated();
    }
    
    // Messages - allow authenticated users to access
    match /messages/{messageId} {
      allow read, write: if isAuthenticated();
    }
    
    // Settings - allow authenticated users to access
    match /settings/{userId} {
      allow read, write: if isAuthenticated();
    }
    
    // App restrictions - only the parent can access their restrictions
    match /appRestrictions/{document} {
      allow create: if isAuthenticated();
      allow read, write: if isAuthenticated() && 
        resource.data.parentId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.parentId == request.auth.uid;
    }
    
    // Notifications - only the recipient can read their notifications
    match /notifications/{notificationId} {
      allow create: if isAuthenticated();
      allow read, write: if isAuthenticated() && 
        resource.data.recipientId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.recipientId == request.auth.uid;
    }
    
    // New app detections - only the parent can access their detections
    match /newAppDetections/{detectionId} {
      allow create: if isAuthenticated();
      allow read, write: if isAuthenticated() && 
        resource.data.parentId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.parentId == request.auth.uid;
    }
    
    // App deletions - only the parent can access their deletion records
    match /deletedApps/{document} {
      allow create: if isAuthenticated();
      allow read, write: if isAuthenticated() && 
        resource.data.parentId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.parentId == request.auth.uid;
    }
    
    // Typing indicators - allow chat participants to access
    match /typingIndicators/{chatId} {
      allow create, read, write: if isAuthenticated();
    }
    
    // Heartbeats - allow users to update their own heartbeat, parents to read children's heartbeats
    match /heartbeats/{userId} {
      allow create, update: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isAuthenticated() && (
        request.auth.uid == userId || 
        exists(/databases/$(database)/documents/parentChildRelationships/{relationshipId}) &&
        (resource.data.parentUserId == request.auth.uid || resource.data.childUserId == request.auth.uid)
      );
    }
    
    // Security logs - read-only for authenticated users
    match /securityLogs/{logId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if false; // No updates or deletions allowed
    }
    
    // Test collection (for connection testing)
    match /_test/{docId} {
      allow read, write: if isAuthenticated();
    }
  }
} 