rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Pairing requests - anyone can create, and any authenticated user can read during pairing
    match /pairingRequests/{requestId} {
      allow create, read, update: if isAuthenticated();
      allow delete: if isAuthenticated() && 
        (resource.data.childUserId == request.auth.uid || 
        resource.data.parentUserId == request.auth.uid);
    }
    
    // Users collection - allow authenticated users to access (needed for pairing)
    match /users/{userId} {
      allow read, write: if isAuthenticated();
    }
    
    // Parent-child relationships - only involved parties can access
    match /parentChildRelationships/{relationshipId} {
      allow create: if isAuthenticated();
      allow read, write: if isAuthenticated() && 
        (resource.data.parentUserId == request.auth.uid || 
         resource.data.childUserId == request.auth.uid);
      allow delete: if isAuthenticated() && 
        (resource.data.parentUserId == request.auth.uid || 
         resource.data.childUserId == request.auth.uid);
    }
    
    // Families collection - allow authenticated users to access
    match /families/{familyId} {
      allow read, write: if isAuthenticated();
    }
    
    // Child devices - allow authenticated users to access
    match /childDevices/{deviceId} {
      allow read, write: if isAuthenticated();
    }
    
    // Screen time data - allow authenticated users to access
    match /screenTimeData/{docId} {
      allow read, write: if isAuthenticated();
    }
    
    // Messages - allow authenticated users to access
    match /messages/{messageId} {
      allow read, write: if isAuthenticated();
    }
    
    // Settings - allow authenticated users to access
    match /settings/{userId} {
      allow read, write: if isAuthenticated();
    }
    
    // Notifications - only the parent can read their notifications
    match /notifications/{notificationId} {
      allow create: if isAuthenticated();
      allow read, write: if isAuthenticated() && 
        resource.data.parentUserId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.parentUserId == request.auth.uid;
    }
    
    // New app detections - allow authenticated users to create, but only relevant parties can read
    match /newAppDetections/{detectionId} {
      allow create: if isAuthenticated();
      allow read, write: if isAuthenticated() && 
        resource.data.deviceId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.deviceId == request.auth.uid;
    }
    
    // Test collection (for connection testing)
    match /_test/{docId} {
      allow read, write: if isAuthenticated();
    }
  }
} 